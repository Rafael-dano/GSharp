{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelagredano/Desktop/F1/GSharp/frontend/src/components/SongList.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SongList() {\n  _s();\n  const [songs, setSongs] = useState([]);\n  const [error, setError] = useState(null);\n  const [commentInputs, setCommentInputs] = useState({}); // For handling comments input\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setError(\"You must be logged in to view songs.\");\n          return;\n        }\n        const response = await fetch(\"http://localhost:8000/songs\", {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch songs\");\n        }\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setSongs(data);\n        } else {\n          setSongs([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Error fetching songs. Please try again later.\");\n      }\n    };\n    fetchSongs();\n  }, []);\n\n  // Handle like button click\n  const handleLike = async songId => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/songs/${songId}/like`);\n      setSongs(prevSongs => prevSongs.map(song => song._id === songId ? {\n        ...song,\n        likes: (song.likes || 0) + 1\n      } : song));\n    } catch (error) {\n      console.error(\"Error liking song:\", error);\n    }\n  };\n\n  // Handle comment input change\n  const handleCommentChange = (e, songId) => {\n    setCommentInputs({\n      ...commentInputs,\n      [songId]: e.target.value\n    });\n  };\n\n  // Handle adding a comment\n  const handleAddComment = async songId => {\n    const comment = commentInputs[songId];\n    if (!comment) return;\n    try {\n      await axios.post(`http://127.0.0.1:8000/songs/${songId}/comments`, {\n        username: \"Guest\",\n        // Replace with actual username if logged in\n        content: comment\n      });\n      setSongs(prevSongs => prevSongs.map(song => song._id === songId ? {\n        ...song,\n        comments: [...(song.comments || []), {\n          username: \"Guest\",\n          content: comment\n        }]\n      } : song));\n      setCommentInputs({\n        ...commentInputs,\n        [songId]: \"\"\n      });\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Uploaded Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), songs.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: song.original_filename || song.filename\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: `http://127.0.0.1:8000/songs/${song.filename}`,\n            type: \"audio/mpeg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this), \"Your browser does not support the audio element.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleLike(song._id),\n            children: [\"\\uD83D\\uDC4D \", song.likes || 0, \" Likes\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Comments:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this), song.comments && song.comments.length > 0 ? song.comments.map((c, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: [c.username, \":\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 23\n            }, this), \" \", c.content]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 21\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No comments yet.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: commentInputs[song._id] || \"\",\n            onChange: e => handleCommentChange(e, song._id),\n            placeholder: \"Add a comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAddComment(song._id),\n            children: \"Comment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this)]\n      }, song._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No songs uploaded yet.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(SongList, \"dnkSMuQ19WQYYKevOw9tXu+3784=\");\n_c = SongList;\nexport default SongList;\nvar _c;\n$RefreshReg$(_c, \"SongList\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","SongList","_s","songs","setSongs","error","setError","commentInputs","setCommentInputs","fetchSongs","token","localStorage","getItem","response","fetch","headers","Authorization","ok","Error","data","json","Array","isArray","console","handleLike","songId","post","prevSongs","map","song","_id","likes","handleCommentChange","e","target","value","handleAddComment","comment","username","content","comments","children","fileName","_jsxFileName","lineNumber","columnNumber","length","original_filename","filename","controls","src","type","onClick","c","index","onChange","placeholder","_c","$RefreshReg$"],"sources":["/Users/rafaelagredano/Desktop/F1/GSharp/frontend/src/components/SongList.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nfunction SongList() {\n  const [songs, setSongs] = useState([]);\n  const [error, setError] = useState(null);\n  const [commentInputs, setCommentInputs] = useState({});  // For handling comments input\n\n  useEffect(() => {\n    const fetchSongs = async () => {\n      try {\n        const token = localStorage.getItem(\"token\");\n        if (!token) {\n          setError(\"You must be logged in to view songs.\");\n          return;\n        }\n\n        const response = await fetch(\"http://localhost:8000/songs\", {\n          headers: {\n            Authorization: `Bearer ${token}`,\n          },\n        });\n\n        if (!response.ok) {\n          throw new Error(\"Failed to fetch songs\");\n        }\n\n        const data = await response.json();\n        if (Array.isArray(data)) {\n          setSongs(data);\n        } else {\n          setSongs([]);\n        }\n      } catch (error) {\n        console.error(\"Error fetching songs:\", error);\n        setError(\"Error fetching songs. Please try again later.\");\n      }\n    };\n\n    fetchSongs();\n  }, []);\n\n  // Handle like button click\n  const handleLike = async (songId) => {\n    try {\n      await axios.post(`http://127.0.0.1:8000/songs/${songId}/like`);\n      setSongs((prevSongs) =>\n        prevSongs.map((song) =>\n          song._id === songId ? { ...song, likes: (song.likes || 0) + 1 } : song\n        )\n      );\n    } catch (error) {\n      console.error(\"Error liking song:\", error);\n    }\n  };\n\n  // Handle comment input change\n  const handleCommentChange = (e, songId) => {\n    setCommentInputs({\n      ...commentInputs,\n      [songId]: e.target.value,\n    });\n  };\n\n  // Handle adding a comment\n  const handleAddComment = async (songId) => {\n    const comment = commentInputs[songId];\n    if (!comment) return;\n\n    try {\n      await axios.post(`http://127.0.0.1:8000/songs/${songId}/comments`, {\n        username: \"Guest\",  // Replace with actual username if logged in\n        content: comment,\n      });\n      setSongs((prevSongs) =>\n        prevSongs.map((song) =>\n          song._id === songId\n            ? {\n                ...song,\n                comments: [...(song.comments || []), { username: \"Guest\", content: comment }],\n              }\n            : song\n        )\n      );\n      setCommentInputs({ ...commentInputs, [songId]: \"\" });\n    } catch (error) {\n      console.error(\"Error adding comment:\", error);\n    }\n  };\n\n  if (error) {\n    return <div>{error}</div>;\n  }\n\n  return (\n    <div>\n      <h2>Uploaded Songs</h2>\n      {songs.length > 0 ? (\n        <ul>\n          {songs.map((song) => (\n            <li key={song._id}>\n              <p>{song.original_filename || song.filename}</p>\n              <audio controls>\n                <source\n                  src={`http://127.0.0.1:8000/songs/${song.filename}`}\n                  type=\"audio/mpeg\"\n                />\n                Your browser does not support the audio element.\n              </audio>\n\n              {/* Like button */}\n              <div>\n                <button onClick={() => handleLike(song._id)}>\n                  👍 {song.likes || 0} Likes\n                </button>\n              </div>\n\n              {/* Comment section */}\n              <div>\n                <h4>Comments:</h4>\n                {song.comments && song.comments.length > 0 ? (\n                  song.comments.map((c, index) => (\n                    <p key={index}>\n                      <strong>{c.username}:</strong> {c.content}\n                    </p>\n                  ))\n                ) : (\n                  <p>No comments yet.</p>\n                )}\n                <input\n                  type=\"text\"\n                  value={commentInputs[song._id] || \"\"}\n                  onChange={(e) => handleCommentChange(e, song._id)}\n                  placeholder=\"Add a comment\"\n                />\n                <button onClick={() => handleAddComment(song._id)}>Comment</button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No songs uploaded yet.</p>\n      )}\n    </div>\n  );\n}\n\nexport default SongList;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAE;;EAEzDC,SAAS,CAAC,MAAM;IACd,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACF,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,IAAI,CAACF,KAAK,EAAE;UACVJ,QAAQ,CAAC,sCAAsC,CAAC;UAChD;QACF;QAEA,MAAMO,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAA6B,EAAE;UAC1DC,OAAO,EAAE;YACPC,aAAa,EAAE,UAAUN,KAAK;UAChC;QACF,CAAC,CAAC;QAEF,IAAI,CAACG,QAAQ,CAACI,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuB,CAAC;QAC1C;QAEA,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAI,CAAC,CAAC;QAClC,IAAIC,KAAK,CAACC,OAAO,CAACH,IAAI,CAAC,EAAE;UACvBf,QAAQ,CAACe,IAAI,CAAC;QAChB,CAAC,MAAM;UACLf,QAAQ,CAAC,EAAE,CAAC;QACd;MACF,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdkB,OAAO,CAAClB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;QAC7CC,QAAQ,CAAC,+CAA+C,CAAC;MAC3D;IACF,CAAC;IAEDG,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMe,UAAU,GAAG,MAAOC,MAAM,IAAK;IACnC,IAAI;MACF,MAAM3B,KAAK,CAAC4B,IAAI,CAAC,+BAA+BD,MAAM,OAAO,CAAC;MAC9DrB,QAAQ,CAAEuB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACC,GAAG,KAAKL,MAAM,GAAG;QAAE,GAAGI,IAAI;QAAEE,KAAK,EAAE,CAACF,IAAI,CAACE,KAAK,IAAI,CAAC,IAAI;MAAE,CAAC,GAAGF,IACpE,CACF,CAAC;IACH,CAAC,CAAC,OAAOxB,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C;EACF,CAAC;;EAED;EACA,MAAM2B,mBAAmB,GAAGA,CAACC,CAAC,EAAER,MAAM,KAAK;IACzCjB,gBAAgB,CAAC;MACf,GAAGD,aAAa;MAChB,CAACkB,MAAM,GAAGQ,CAAC,CAACC,MAAM,CAACC;IACrB,CAAC,CAAC;EACJ,CAAC;;EAED;EACA,MAAMC,gBAAgB,GAAG,MAAOX,MAAM,IAAK;IACzC,MAAMY,OAAO,GAAG9B,aAAa,CAACkB,MAAM,CAAC;IACrC,IAAI,CAACY,OAAO,EAAE;IAEd,IAAI;MACF,MAAMvC,KAAK,CAAC4B,IAAI,CAAC,+BAA+BD,MAAM,WAAW,EAAE;QACjEa,QAAQ,EAAE,OAAO;QAAG;QACpBC,OAAO,EAAEF;MACX,CAAC,CAAC;MACFjC,QAAQ,CAAEuB,SAAS,IACjBA,SAAS,CAACC,GAAG,CAAEC,IAAI,IACjBA,IAAI,CAACC,GAAG,KAAKL,MAAM,GACf;QACE,GAAGI,IAAI;QACPW,QAAQ,EAAE,CAAC,IAAIX,IAAI,CAACW,QAAQ,IAAI,EAAE,CAAC,EAAE;UAAEF,QAAQ,EAAE,OAAO;UAAEC,OAAO,EAAEF;QAAQ,CAAC;MAC9E,CAAC,GACDR,IACN,CACF,CAAC;MACDrB,gBAAgB,CAAC;QAAE,GAAGD,aAAa;QAAE,CAACkB,MAAM,GAAG;MAAG,CAAC,CAAC;IACtD,CAAC,CAAC,OAAOpB,KAAK,EAAE;MACdkB,OAAO,CAAClB,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C;EACF,CAAC;EAED,IAAIA,KAAK,EAAE;IACT,oBAAOL,OAAA;MAAAyC,QAAA,EAAMpC;IAAK;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC3B;EAEA,oBACE7C,OAAA;IAAAyC,QAAA,gBACEzC,OAAA;MAAAyC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtB1C,KAAK,CAAC2C,MAAM,GAAG,CAAC,gBACf9C,OAAA;MAAAyC,QAAA,EACGtC,KAAK,CAACyB,GAAG,CAAEC,IAAI,iBACd7B,OAAA;QAAAyC,QAAA,gBACEzC,OAAA;UAAAyC,QAAA,EAAIZ,IAAI,CAACkB,iBAAiB,IAAIlB,IAAI,CAACmB;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAChD7C,OAAA;UAAOiD,QAAQ;UAAAR,QAAA,gBACbzC,OAAA;YACEkD,GAAG,EAAE,+BAA+BrB,IAAI,CAACmB,QAAQ,EAAG;YACpDG,IAAI,EAAC;UAAY;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClB,CAAC,oDAEJ;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAGR7C,OAAA;UAAAyC,QAAA,eACEzC,OAAA;YAAQoD,OAAO,EAAEA,CAAA,KAAM5B,UAAU,CAACK,IAAI,CAACC,GAAG,CAAE;YAAAW,QAAA,GAAC,eACxC,EAACZ,IAAI,CAACE,KAAK,IAAI,CAAC,EAAC,QACtB;UAAA;YAAAW,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC,eAGN7C,OAAA;UAAAyC,QAAA,gBACEzC,OAAA;YAAAyC,QAAA,EAAI;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACjBhB,IAAI,CAACW,QAAQ,IAAIX,IAAI,CAACW,QAAQ,CAACM,MAAM,GAAG,CAAC,GACxCjB,IAAI,CAACW,QAAQ,CAACZ,GAAG,CAAC,CAACyB,CAAC,EAAEC,KAAK,kBACzBtD,OAAA;YAAAyC,QAAA,gBACEzC,OAAA;cAAAyC,QAAA,GAASY,CAAC,CAACf,QAAQ,EAAC,GAAC;YAAA;cAAAI,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,KAAC,EAACQ,CAAC,CAACd,OAAO;UAAA,GADnCe,KAAK;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEV,CACJ,CAAC,gBAEF7C,OAAA;YAAAyC,QAAA,EAAG;UAAgB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG,CACvB,eACD7C,OAAA;YACEmD,IAAI,EAAC,MAAM;YACXhB,KAAK,EAAE5B,aAAa,CAACsB,IAAI,CAACC,GAAG,CAAC,IAAI,EAAG;YACrCyB,QAAQ,EAAGtB,CAAC,IAAKD,mBAAmB,CAACC,CAAC,EAAEJ,IAAI,CAACC,GAAG,CAAE;YAClD0B,WAAW,EAAC;UAAe;YAAAd,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC,eACF7C,OAAA;YAAQoD,OAAO,EAAEA,CAAA,KAAMhB,gBAAgB,CAACP,IAAI,CAACC,GAAG,CAAE;YAAAW,QAAA,EAAC;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChE,CAAC;MAAA,GApCChB,IAAI,CAACC,GAAG;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAqCb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL7C,OAAA;MAAAyC,QAAA,EAAG;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC7B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC3C,EAAA,CA9IQD,QAAQ;AAAAwD,EAAA,GAARxD,QAAQ;AAgJjB,eAAeA,QAAQ;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}