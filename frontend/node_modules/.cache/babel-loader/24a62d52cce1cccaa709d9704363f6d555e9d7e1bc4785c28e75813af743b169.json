{"ast":null,"code":"var _jsxFileName = \"/Users/rafaelagredano/Desktop/F1/GSharp/frontend/src/components/MusicUpload.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicUpload() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n  useEffect(() => {\n    fetchSongs();\n  }, []);\n  const fetchSongs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/songs\");\n      const data = await response.json();\n      setSongs(data);\n    } catch (error) {\n      console.error(\"Error fetching songs:\", error);\n    }\n  };\n  const handleFileChange = event => {\n    setFile(event.target.files[0]);\n  };\n  const handleUpload = async event => {\n    event.preventDefault(); // Fix: Ensure event is passed correctly\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:8000/upload\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"File uploaded successfully!\");\n        fetchSongs(); // Refresh the song list after upload\n      } else {\n        setMessage(data.detail || \"Upload failed.\");\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".mp3\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Uploaded Songs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: songs.map((song, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [song.filename, \" - \", /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: song.fileUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 31\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicUpload, \"GyFfqb1Xdo2qCIkvxSt5Xjhb+eU=\");\n_c = MusicUpload;\nexport default MusicUpload;\nvar _c;\n$RefreshReg$(_c, \"MusicUpload\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","MusicUpload","_s","file","setFile","message","setMessage","songs","setSongs","fetchSongs","response","fetch","data","json","error","console","handleFileChange","event","target","files","handleUpload","preventDefault","formData","FormData","append","method","body","ok","detail","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","accept","onChange","map","song","index","filename","controls","src","fileUrl","_c","$RefreshReg$"],"sources":["/Users/rafaelagredano/Desktop/F1/GSharp/frontend/src/components/MusicUpload.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\nfunction MusicUpload() {\n  const [file, setFile] = useState(null);\n  const [message, setMessage] = useState(\"\");\n  const [songs, setSongs] = useState([]);\n\n  useEffect(() => {\n    fetchSongs();\n  }, []);\n\n  const fetchSongs = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/songs\");\n      const data = await response.json();\n      setSongs(data);\n    } catch (error) {\n      console.error(\"Error fetching songs:\", error);\n    }\n  };\n\n  const handleFileChange = (event) => {\n    setFile(event.target.files[0]);\n  };\n\n  const handleUpload = async (event) => {\n    event.preventDefault(); // Fix: Ensure event is passed correctly\n    if (!file) {\n      setMessage(\"Please select a file first.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await fetch(\"http://localhost:8000/upload\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      const data = await response.json();\n      if (response.ok) {\n        setMessage(\"File uploaded successfully!\");\n        fetchSongs(); // Refresh the song list after upload\n      } else {\n        setMessage(data.detail || \"Upload failed.\");\n      }\n    } catch (error) {\n      console.error(\"Upload error:\", error);\n      setMessage(\"Error uploading file.\");\n    }\n  };\n\n  return (\n    <div>\n      <h2>Upload Music</h2>\n      <form onSubmit={handleUpload}>\n        <input type=\"file\" accept=\".mp3\" onChange={handleFileChange} />\n        <button type=\"submit\">Upload</button>\n      </form>\n      <p>{message}</p>\n\n      <h3>Uploaded Songs</h3>\n      <ul>\n        {songs.map((song, index) => (\n          <li key={index}>\n            {song.filename} - <audio controls src={song.fileUrl}></audio>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MusicUpload;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}